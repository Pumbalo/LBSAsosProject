{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/AsosProject/client/src/components/ProductFetch/FetchAPI.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useState, useEffect, Fragment } from \"react\";\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport Loading from \"../UI/Progress/Circular\";\nimport classes from \"./FetchAPI.module.css\";\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchAPI = props => {\n  _s();\n\n  Axios.defaults.withCredentials = false; // Sätter initial loading state till false\n\n  const [isLoading, setIsLoading] = useState(false);\n  let linkParams = useParams();\n  let history = useHistory();\n  const [product, setProducts] = useState([]);\n  let facetValue = props.facetValue;\n  let facetKey = props.facetKey; // Sätter initial parameters\n\n  const [params, setParams] = useState({\n    store: \"US\",\n    categoryId: props.categoryId,\n    limit: 48,\n    country: \"US\",\n    sort: \"freshness\",\n    currency: \"USD\",\n    sizeSchema: \"US\",\n    lang: \"en-US\"\n  });\n  useEffect(() => {\n    // skapar ett nytt objekt 'requestParam' som sedan tar all data från params samt lägger\n    // till offset & limit: Detta är tex produkt 0-48, eller produkt 100-142, osv.\n    let requestParam = { ...params,\n      offset: props.offset\n    }; // om FacetKey inte är undefined.\n\n    if (facetKey) {\n      // Lägger till Key och Value från \"sorting dropdown\"\n      requestParam = {\n        [facetKey]: facetValue,\n        ...params\n      }; // Sätter param till requestParam så de sparar värdet ifall användaren sorterar på olika sätt.\n\n      setParams({ ...requestParam\n      });\n    } // Sätter standard värden på api call.\n\n\n    const options = {\n      method: \"GET\",\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\n      params: requestParam,\n      headers: {\n        \"x-rapidapi-key\": \"8dde4b0400mshe33118a17798972p174f30jsne26022450645\",\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\"\n      }\n    }; // Axios fetchar api\n\n    axios.request(options).then(function (response) {\n      setProducts(response.data.products);\n      props.items(response.data.itemCount);\n      props.facets(response.data.facets);\n      setIsLoading(true);\n    }).catch(function (error) {\n      console.error(error);\n    }); // Detta körs endast ifall props.limit eller facetKey har fått nytt värde.\n  }, [props.offset, facetKey]);\n\n  const productClickHandler = event => {\n    // Tar parameters från url.\n    let categoryType = linkParams.type;\n    let categoryId = linkParams.id; // Tar \"productId\" från produkten man klickar på.\n\n    let productId = event.currentTarget.getAttribute(\"datakey\"); // Skickar dig till detaljerad produkt sidan.\n\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: isLoading ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: product.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n          datakey: product.id,\n          img: product.imageUrl,\n          name: product.name,\n          price: product.price.current.text,\n          onClick: productClickHandler,\n          productId: product.id\n        }, product.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {\n        className: classes.loading,\n        title: \"Loading Products\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchAPI, \"0Geopxa4aRJNZscI0WnNXbtiE+E=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = FetchAPI;\nexport default FetchAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchAPI\");","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/ProductFetch/FetchAPI.js"],"names":["axios","useState","useEffect","Fragment","ProductCard","useParams","useHistory","Loading","classes","Axios","FetchAPI","props","defaults","withCredentials","isLoading","setIsLoading","linkParams","history","product","setProducts","facetValue","facetKey","params","setParams","store","categoryId","limit","country","sort","currency","sizeSchema","lang","requestParam","offset","options","method","url","headers","request","then","response","data","products","items","itemCount","facets","catch","error","console","productClickHandler","event","categoryType","type","id","productId","currentTarget","getAttribute","push","container","map","imageUrl","name","price","current","text","loading"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,QAA9B,QAA8C,OAA9C;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,kBAAtC;AAEA,OAAOC,OAAP,MAAoB,yBAApB;AAEA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1BF,EAAAA,KAAK,CAACG,QAAN,CAAeC,eAAf,GAAiC,KAAjC,CAD0B,CAG1B;;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEA,MAAIe,UAAU,GAAGX,SAAS,EAA1B;AACA,MAAIY,OAAO,GAAGX,UAAU,EAAxB;AACA,QAAM,CAACY,OAAD,EAAUC,WAAV,IAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AACA,MAAImB,UAAU,GAAGT,KAAK,CAACS,UAAvB;AACA,MAAIC,QAAQ,GAAGV,KAAK,CAACU,QAArB,CAV0B,CAY1B;;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC;AACnCuB,IAAAA,KAAK,EAAE,IAD4B;AAEnCC,IAAAA,UAAU,EAAEd,KAAK,CAACc,UAFiB;AAGnCC,IAAAA,KAAK,EAAE,EAH4B;AAInCC,IAAAA,OAAO,EAAE,IAJ0B;AAKnCC,IAAAA,IAAI,EAAE,WAL6B;AAMnCC,IAAAA,QAAQ,EAAE,KANyB;AAOnCC,IAAAA,UAAU,EAAE,IAPuB;AAQnCC,IAAAA,IAAI,EAAE;AAR6B,GAAD,CAApC;AAWA7B,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA,QAAI8B,YAAY,GAAG,EACjB,GAAGV,MADc;AAEjBW,MAAAA,MAAM,EAAEtB,KAAK,CAACsB;AAFG,KAAnB,CAHc,CAOd;;AACA,QAAIZ,QAAJ,EAAc;AACZ;AACAW,MAAAA,YAAY,GAAG;AACb,SAACX,QAAD,GAAYD,UADC;AAEb,WAAGE;AAFU,OAAf,CAFY,CAMZ;;AACAC,MAAAA,SAAS,CAAC,EAAE,GAAGS;AAAL,OAAD,CAAT;AACD,KAhBa,CAkBd;;;AACA,UAAME,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,KADM;AAEdC,MAAAA,GAAG,EAAE,+CAFS;AAGdd,MAAAA,MAAM,EAAEU,YAHM;AAIdK,MAAAA,OAAO,EAAE;AACP,0BAAkB,oDADX;AAEP,2BAAmB;AAFZ;AAJK,KAAhB,CAnBc,CA4Bd;;AACArC,IAAAA,KAAK,CACFsC,OADH,CACWJ,OADX,EAEGK,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxBrB,MAAAA,WAAW,CAACqB,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAX;AACA/B,MAAAA,KAAK,CAACgC,KAAN,CAAYH,QAAQ,CAACC,IAAT,CAAcG,SAA1B;AACAjC,MAAAA,KAAK,CAACkC,MAAN,CAAaL,QAAQ,CAACC,IAAT,CAAcI,MAA3B;AACA9B,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAPH,EAQG+B,KARH,CAQS,UAAUC,KAAV,EAAiB;AACtBC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAVH,EA7Bc,CAwCd;AACD,GAzCQ,EAyCN,CAACpC,KAAK,CAACsB,MAAP,EAAeZ,QAAf,CAzCM,CAAT;;AA2CA,QAAM4B,mBAAmB,GAAIC,KAAD,IAAW;AACrC;AACA,QAAIC,YAAY,GAAGnC,UAAU,CAACoC,IAA9B;AACA,QAAI3B,UAAU,GAAGT,UAAU,CAACqC,EAA5B,CAHqC,CAIrC;;AACA,QAAIC,SAAS,GAAGJ,KAAK,CAACK,aAAN,CAAoBC,YAApB,CAAiC,SAAjC,CAAhB,CALqC,CAMrC;;AACAvC,IAAAA,OAAO,CAACwC,IAAR,CAAc,aAAYN,YAAa,IAAG1B,UAAW,IAAG6B,SAAU,EAAlE;AACD,GARD;;AAUA,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAE9C,OAAO,CAACkD,SAAxB;AAAA,gBACG5C,SAAS,gBACR,QAAC,QAAD;AAAA,kBACGI,OAAO,CAACyC,GAAR,CAAazC,OAAD,iBACX,QAAC,WAAD;AAEE,UAAA,OAAO,EAAEA,OAAO,CAACmC,EAFnB;AAGE,UAAA,GAAG,EAAEnC,OAAO,CAAC0C,QAHf;AAIE,UAAA,IAAI,EAAE1C,OAAO,CAAC2C,IAJhB;AAKE,UAAA,KAAK,EAAE3C,OAAO,CAAC4C,KAAR,CAAcC,OAAd,CAAsBC,IAL/B;AAME,UAAA,OAAO,EAAEf,mBANX;AAOE,UAAA,SAAS,EAAE/B,OAAO,CAACmC;AAPrB,WACOnC,OAAO,CAACmC,EADf;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADQ,gBAeR,QAAC,OAAD;AAAS,QAAA,SAAS,EAAE7C,OAAO,CAACyD,OAA5B;AAAqC,QAAA,KAAK,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAhBJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CApGD;;GAAMvD,Q;UAMaL,S,EACHC,U;;;KAPVI,Q;AAsGN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Loading from \"../UI/Progress/Circular\";\r\n\r\nimport classes from \"./FetchAPI.module.css\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst FetchAPI = (props) => {\r\n  Axios.defaults.withCredentials = false;\r\n\r\n  // Sätter initial loading state till false\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let linkParams = useParams();\r\n  let history = useHistory();\r\n  const [product, setProducts] = useState([]);\r\n  let facetValue = props.facetValue;\r\n  let facetKey = props.facetKey;\r\n\r\n  // Sätter initial parameters\r\n  const [params, setParams] = useState({\r\n    store: \"US\",\r\n    categoryId: props.categoryId,\r\n    limit: 48,\r\n    country: \"US\",\r\n    sort: \"freshness\",\r\n    currency: \"USD\",\r\n    sizeSchema: \"US\",\r\n    lang: \"en-US\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // skapar ett nytt objekt 'requestParam' som sedan tar all data från params samt lägger\r\n    // till offset & limit: Detta är tex produkt 0-48, eller produkt 100-142, osv.\r\n    let requestParam = {\r\n      ...params,\r\n      offset: props.offset,\r\n    };\r\n    // om FacetKey inte är undefined.\r\n    if (facetKey) {\r\n      // Lägger till Key och Value från \"sorting dropdown\"\r\n      requestParam = {\r\n        [facetKey]: facetValue,\r\n        ...params,\r\n      };\r\n      // Sätter param till requestParam så de sparar värdet ifall användaren sorterar på olika sätt.\r\n      setParams({ ...requestParam });\r\n    }\r\n\r\n    // Sätter standard värden på api call.\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\r\n      params: requestParam,\r\n      headers: {\r\n        \"x-rapidapi-key\": \"8dde4b0400mshe33118a17798972p174f30jsne26022450645\",\r\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\r\n      },\r\n    };\r\n    // Axios fetchar api\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        setProducts(response.data.products);\r\n        props.items(response.data.itemCount);\r\n        props.facets(response.data.facets);\r\n        setIsLoading(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    // Detta körs endast ifall props.limit eller facetKey har fått nytt värde.\r\n  }, [props.offset, facetKey]);\r\n\r\n  const productClickHandler = (event) => {\r\n    // Tar parameters från url.\r\n    let categoryType = linkParams.type;\r\n    let categoryId = linkParams.id;\r\n    // Tar \"productId\" från produkten man klickar på.\r\n    let productId = event.currentTarget.getAttribute(\"datakey\");\r\n    // Skickar dig till detaljerad produkt sidan.\r\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        {isLoading ? (\r\n          <Fragment>\r\n            {product.map((product) => (\r\n              <ProductCard\r\n                key={product.id}\r\n                datakey={product.id}\r\n                img={product.imageUrl}\r\n                name={product.name}\r\n                price={product.price.current.text}\r\n                onClick={productClickHandler}\r\n                productId={product.id}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <Loading className={classes.loading} title=\"Loading Products\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchAPI;\r\n"]},"metadata":{},"sourceType":"module"}