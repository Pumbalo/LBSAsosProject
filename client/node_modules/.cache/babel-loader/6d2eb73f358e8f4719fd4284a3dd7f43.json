{"ast":null,"code":"import _slicedToArray from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{Fragment,useEffect,useState}from\"react\";import ProductCard from\"../UI/ProductCard/ProductCard\";import{useParams,useHistory}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";var FetchAPI=function FetchAPI(props){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),product=_useState2[0],setProducts=_useState2[1];var params=useParams();var history=useHistory();useEffect(function(){var min=0;var max=Math.floor(100/10);var randomOffset=Math.floor(min+Math.random()*(max+1-min));var options={method:\"GET\",url:\"https://asos2.p.rapidapi.com/products/v2/list\",params:{store:\"US\",offset:randomOffset,categoryId:params.id,limit:5,country:\"US\",sort:\"freshness\",currency:\"USD\",sizeSchema:\"US\",lang:\"en-US\"},headers:{\"x-rapidapi-key\":\"202b38878fmsh50dbc4c475e6d98p1c84bbjsnb086cc254106\",\"x-rapidapi-host\":\"asos2.p.rapidapi.com\"}};axios.request(options).then(function(response){setProducts(response.data.products);}).catch(function(error){console.log(error);});},[params.productid]);var productClickHandler=function productClickHandler(event){// Tar parameters från url.\nvar categoryType=params.type;var categoryId=params.id;// Tar \"productId\" från produkten man klickar på.\nvar productId=event.currentTarget.getAttribute(\"datakey\");// Skickar dig till detaljerad produkt sidan.\nhistory.push(\"/category/\".concat(categoryType,\"/\").concat(categoryId,\"/\").concat(productId));window.location.reload();window.scrollTo(0,0);};return/*#__PURE__*/_jsx(Fragment,{children:product.map(function(product){return/*#__PURE__*/_jsx(ProductCard,{dataKey:product.id,img:product.imageUrl,name:product.name,price:product.price.current.text,onClick:productClickHandler},product.id);})});};export default FetchAPI;","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/SimilarProducts/FetchAPI.js"],"names":["axios","Fragment","useEffect","useState","ProductCard","useParams","useHistory","FetchAPI","props","product","setProducts","params","history","min","max","Math","floor","randomOffset","random","options","method","url","store","offset","categoryId","id","limit","country","sort","currency","sizeSchema","lang","headers","request","then","response","data","products","catch","error","console","log","productid","productClickHandler","event","categoryType","type","productId","currentTarget","getAttribute","push","window","location","reload","scrollTo","map","imageUrl","name","price","current","text"],"mappings":"0HAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,SAAnB,CAA8BC,QAA9B,KAA8C,OAA9C,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,OAASC,SAAT,CAAoBC,UAApB,KAAsC,kBAAtC,C,2CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,cAA+BL,QAAQ,CAAC,EAAD,CAAvC,wCAAOM,OAAP,eAAgBC,WAAhB,eAEA,GAAIC,CAAAA,MAAM,CAAGN,SAAS,EAAtB,CACA,GAAIO,CAAAA,OAAO,CAAGN,UAAU,EAAxB,CAEAJ,SAAS,CAAC,UAAM,CACd,GAAIW,CAAAA,GAAG,CAAG,CAAV,CACA,GAAIC,CAAAA,GAAG,CAAGC,IAAI,CAACC,KAAL,CAAW,IAAM,EAAjB,CAAV,CACA,GAAIC,CAAAA,YAAY,CAAGF,IAAI,CAACC,KAAL,CAAWH,GAAG,CAAGE,IAAI,CAACG,MAAL,IAAiBJ,GAAG,CAAG,CAAN,CAAUD,GAA3B,CAAjB,CAAnB,CACA,GAAMM,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,KADM,CAEdC,GAAG,CAAE,+CAFS,CAGdV,MAAM,CAAE,CACNW,KAAK,CAAE,IADD,CAENC,MAAM,CAAEN,YAFF,CAGNO,UAAU,CAAEb,MAAM,CAACc,EAHb,CAINC,KAAK,CAAE,CAJD,CAKNC,OAAO,CAAE,IALH,CAMNC,IAAI,CAAE,WANA,CAONC,QAAQ,CAAE,KAPJ,CAQNC,UAAU,CAAE,IARN,CASNC,IAAI,CAAE,OATA,CAHM,CAcdC,OAAO,CAAE,CACP,iBAAkB,oDADX,CAEP,kBAAmB,sBAFZ,CAdK,CAAhB,CAoBAhC,KAAK,CACFiC,OADH,CACWd,OADX,EAEGe,IAFH,CAEQ,SAAUC,QAAV,CAAoB,CACxBzB,WAAW,CAACyB,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAAX,CACD,CAJH,EAKGC,KALH,CAKS,SAAUC,KAAV,CAAiB,CACtBC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACD,CAPH,EAQD,CAhCQ,CAgCN,CAAC5B,MAAM,CAAC+B,SAAR,CAhCM,CAAT,CAkCA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,KAAD,CAAW,CACrC;AACA,GAAIC,CAAAA,YAAY,CAAGlC,MAAM,CAACmC,IAA1B,CACA,GAAItB,CAAAA,UAAU,CAAGb,MAAM,CAACc,EAAxB,CACA;AACA,GAAIsB,CAAAA,SAAS,CAAGH,KAAK,CAACI,aAAN,CAAoBC,YAApB,CAAiC,SAAjC,CAAhB,CACA;AACArC,OAAO,CAACsC,IAAR,qBAA0BL,YAA1B,aAA0CrB,UAA1C,aAAwDuB,SAAxD,GACAI,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACAF,MAAM,CAACG,QAAP,CAAgB,CAAhB,CAAmB,CAAnB,EACD,CAVD,CAYA,mBACE,KAAC,QAAD,WACG7C,OAAO,CAAC8C,GAAR,CAAY,SAAC9C,OAAD,qBACX,KAAC,WAAD,EAEE,OAAO,CAAEA,OAAO,CAACgB,EAFnB,CAGE,GAAG,CAAEhB,OAAO,CAAC+C,QAHf,CAIE,IAAI,CAAE/C,OAAO,CAACgD,IAJhB,CAKE,KAAK,CAAEhD,OAAO,CAACiD,KAAR,CAAcC,OAAd,CAAsBC,IAL/B,CAME,OAAO,CAAEjB,mBANX,EACOlC,OAAO,CAACgB,EADf,CADW,EAAZ,CADH,EADF,CAcD,CAlED,CAoEA,cAAelB,CAAAA,QAAf","sourcesContent":["import axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst FetchAPI = (props) => {\r\n  const [product, setProducts] = useState([]);\r\n\r\n  let params = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let min = 0;\r\n    let max = Math.floor(100 / 10);\r\n    let randomOffset = Math.floor(min + Math.random() * (max + 1 - min));\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\r\n      params: {\r\n        store: \"US\",\r\n        offset: randomOffset,\r\n        categoryId: params.id,\r\n        limit: 5,\r\n        country: \"US\",\r\n        sort: \"freshness\",\r\n        currency: \"USD\",\r\n        sizeSchema: \"US\",\r\n        lang: \"en-US\",\r\n      },\r\n      headers: {\r\n        \"x-rapidapi-key\": \"202b38878fmsh50dbc4c475e6d98p1c84bbjsnb086cc254106\",\r\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        setProducts(response.data.products);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [params.productid]);\r\n\r\n  const productClickHandler = (event) => {\r\n    // Tar parameters från url.\r\n    let categoryType = params.type;\r\n    let categoryId = params.id;\r\n    // Tar \"productId\" från produkten man klickar på.\r\n    let productId = event.currentTarget.getAttribute(\"datakey\");\r\n    // Skickar dig till detaljerad produkt sidan.\r\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\r\n    window.location.reload();\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {product.map((product) => (\r\n        <ProductCard\r\n          key={product.id}\r\n          dataKey={product.id}\r\n          img={product.imageUrl}\r\n          name={product.name}\r\n          price={product.price.current.text}\r\n          onClick={productClickHandler}\r\n        />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FetchAPI;\r\n"]},"metadata":{},"sourceType":"module"}