{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/AsosProject/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState } from \"react\"; // Routing\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddToCartContext from \"./Contexts/AddToCartContext\";\nimport AddToWishlistContext from \"./Contexts/AddToWishlistContext\";\nimport LoginStatusContext from \"./Contexts/LoginStatusContext\"; // Moduler för \"dark\" och \"light\" theme. Mer i ./themes.js\n\nimport { ThemeProvider } from \"styled-components\";\nimport { ThemeToggler } from \"./ThemeToggler\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes\";\nimport Home from \"./components/Home/Home\";\nimport Account from \"./components/Account/Account\";\nimport CategoryList from \"./components/CategoryList/CategoryList\";\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\nimport Wishlist from \"./components/Wishlist/Wishlist\";\nimport Product from \"./components/Product/Product\";\nimport FetchAPI from \"./components/Product/ProductFetch/FetchAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // \"Lifting state up\" ifrån ./ThemeToggler\n  const [theme, toggleTheme] = ThemeToggler(); // Ifall \"theme\" är \"light\" blir \"themeMode\" till \"dark\", och tvärtom ifall \"theme\" är \"dark\".\n\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme; // Sätter de theme som är aktiverat i LocalStorage så att det går att få tag i det över hela hemsidan.\n\n  localStorage.setItem(\"CurrentTheme\", theme); // theme={theme} | toggleTheme={toggleTheme} => Behöver skickas till alla ./BottomNavigation.js\n  // För att göra knappen möjlig att klicka och ändra theme.\n  // Skapar en state för Cart items (context).\n\n  const [cartItems, setCartItems] = useState([]); // Skapar en state för Wishlist items (context).\n\n  const [wishlistItems, setWishlistItems] = useState([]); // Skapar en state för Login Status (context)\n\n  const [loginStatus, setLoginStatus] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(AddToCartContext.Provider, {\n    value: {\n      cartItems,\n      setCartItems\n    },\n    children: /*#__PURE__*/_jsxDEV(AddToWishlistContext.Provider, {\n      value: {\n        wishlistItems,\n        setWishlistItems\n      },\n      children: /*#__PURE__*/_jsxDEV(LoginStatusContext.Provider, {\n        value: {\n          loginStatus,\n          setLoginStatus\n        },\n        children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n          theme: themeMode,\n          children: [/*#__PURE__*/_jsxDEV(GlobalStyles, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Router, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(Home, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/account\",\n              children: /*#__PURE__*/_jsxDEV(Account, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/category/:type/:id\",\n              children: /*#__PURE__*/_jsxDEV(CategoryList, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/cart\",\n              children: /*#__PURE__*/_jsxDEV(ShoppingCart, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/wishlist\",\n              children: /*#__PURE__*/_jsxDEV(Wishlist, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/product\",\n              children: /*#__PURE__*/_jsxDEV(Product, {\n                theme: theme,\n                toggleTheme: toggleTheme\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/category/:type/:id/:productid\",\n              children: /*#__PURE__*/_jsxDEV(FetchAPI, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OzkrvOtuw1IvmWeJ3aiSdqQJ88c=\");\n\n_c = App;\nexport default App; // Info:\n// Styled-Compontent är ett library som tillåter dig att lägga din css i din JavaScript fil på ett enkelt sätt\n// Varför man gör detta? I mitt fall har jag \"light\" och \"dark\" mode, vad styled-compontent tillåter mig\n// är att jag kan sätta färger som variabler. Man kan använda sig av css variabler så klart,\n// Men i react projekt är styled-components mer effektivt.\n// Samt är det bra att använda styled-component om det är lite css kod som ska skrivas, det kan underlätta med\n// mindre filer då.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/App.js"],"names":["useState","BrowserRouter","Router","Route","AddToCartContext","AddToWishlistContext","LoginStatusContext","ThemeProvider","ThemeToggler","lightTheme","darkTheme","GlobalStyles","Home","Account","CategoryList","ShoppingCart","Wishlist","Product","FetchAPI","App","theme","toggleTheme","themeMode","localStorage","setItem","cartItems","setCartItems","wishlistItems","setWishlistItems","loginStatus","setLoginStatus"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,gBAAP,MAA6B,6BAA7B;AAEA,OAAOC,oBAAP,MAAiC,iCAAjC;AAEA,OAAOC,kBAAP,MAA+B,+BAA/B,C,CAEA;;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,UAApD;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;AAEA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AAEA,OAAOC,QAAP,MAAqB,4CAArB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb;AACA,QAAM,CAACC,KAAD,EAAQC,WAAR,IAAuBb,YAAY,EAAzC,CAFa,CAIb;;AACA,QAAMc,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoBX,UAApB,GAAiCC,SAAnD,CALa,CAMb;;AACAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCJ,KAArC,EAPa,CASb;AACA;AAEA;;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CAAC,EAAD,CAA1C,CAba,CAeb;;AACA,QAAM,CAAC2B,aAAD,EAAgBC,gBAAhB,IAAoC5B,QAAQ,CAAC,EAAD,CAAlD,CAhBa,CAkBb;;AACA,QAAM,CAAC6B,WAAD,EAAcC,cAAd,IAAgC9B,QAAQ,CAAC,EAAD,CAA9C;AAEA,sBACE,QAAC,gBAAD,CAAkB,QAAlB;AAA2B,IAAA,KAAK,EAAE;AAAEyB,MAAAA,SAAF;AAAaC,MAAAA;AAAb,KAAlC;AAAA,2BACE,QAAC,oBAAD,CAAsB,QAAtB;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OADT;AAAA,6BAGE,QAAC,kBAAD,CAAoB,QAApB;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAF;AAAeC,UAAAA;AAAf,SAApC;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,KAAK,EAAER,SAAtB;AAAA,kCAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,MAAD;AAAA,oCACE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,GAAlB;AAAA,qCACE,QAAC,IAAD;AAAM,gBAAA,KAAK,EAAEF,KAAb;AAAoB,gBAAA,WAAW,EAAEC;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,UAAlB;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAED,KAAhB;AAAuB,gBAAA,WAAW,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF,eAOE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,qBAAlB;AAAA,qCACE,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAED,KAArB;AAA4B,gBAAA,WAAW,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF,eAUE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,OAAlB;AAAA,qCACE,QAAC,YAAD;AAAc,gBAAA,KAAK,EAAED,KAArB;AAA4B,gBAAA,WAAW,EAAEC;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,WAAlB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,KAAK,EAAED,KAAjB;AAAwB,gBAAA,WAAW,EAAEC;AAArC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF,eAgBE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,UAAlB;AAAA,qCACE,QAAC,OAAD;AAAS,gBAAA,KAAK,EAAED,KAAhB;AAAuB,gBAAA,WAAW,EAAEC;AAApC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAmBE,QAAC,KAAD;AAAO,cAAA,KAAK,MAAZ;AAAa,cAAA,IAAI,EAAC,gCAAlB;AAAA,qCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GA1DQF,G;;KAAAA,G;AA4DT,eAAeA,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\n// Routing\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AddToCartContext from \"./Contexts/AddToCartContext\";\n\nimport AddToWishlistContext from \"./Contexts/AddToWishlistContext\";\n\nimport LoginStatusContext from \"./Contexts/LoginStatusContext\";\n\n// Moduler för \"dark\" och \"light\" theme. Mer i ./themes.js\nimport { ThemeProvider } from \"styled-components\";\nimport { ThemeToggler } from \"./ThemeToggler\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes\";\n\nimport Home from \"./components/Home/Home\";\n\nimport Account from \"./components/Account/Account\";\n\nimport CategoryList from \"./components/CategoryList/CategoryList\";\n\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\nimport Wishlist from \"./components/Wishlist/Wishlist\";\nimport Product from \"./components/Product/Product\";\n\nimport FetchAPI from \"./components/Product/ProductFetch/FetchAPI\";\n\nfunction App() {\n  // \"Lifting state up\" ifrån ./ThemeToggler\n  const [theme, toggleTheme] = ThemeToggler();\n\n  // Ifall \"theme\" är \"light\" blir \"themeMode\" till \"dark\", och tvärtom ifall \"theme\" är \"dark\".\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  // Sätter de theme som är aktiverat i LocalStorage så att det går att få tag i det över hela hemsidan.\n  localStorage.setItem(\"CurrentTheme\", theme);\n\n  // theme={theme} | toggleTheme={toggleTheme} => Behöver skickas till alla ./BottomNavigation.js\n  // För att göra knappen möjlig att klicka och ändra theme.\n\n  // Skapar en state för Cart items (context).\n  const [cartItems, setCartItems] = useState([]);\n\n  // Skapar en state för Wishlist items (context).\n  const [wishlistItems, setWishlistItems] = useState([]);\n\n  // Skapar en state för Login Status (context)\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  return (\n    <AddToCartContext.Provider value={{ cartItems, setCartItems }}>\n      <AddToWishlistContext.Provider\n        value={{ wishlistItems, setWishlistItems }}\n      >\n        <LoginStatusContext.Provider value={{ loginStatus, setLoginStatus }}>\n          <ThemeProvider theme={themeMode}>\n            {/* GlobalStyles skapas i ./themes.js */}\n            <GlobalStyles />\n            <Router>\n              <Route exact path=\"/\">\n                <Home theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/account\">\n                <Account theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/category/:type/:id\">\n                <CategoryList theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/cart\">\n                <ShoppingCart theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/wishlist\">\n                <Wishlist theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/product\">\n                <Product theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/category/:type/:id/:productid\">\n                <FetchAPI />\n              </Route>\n            </Router>\n          </ThemeProvider>\n        </LoginStatusContext.Provider>\n      </AddToWishlistContext.Provider>\n    </AddToCartContext.Provider>\n  );\n}\n\nexport default App;\n\n// Info:\n// Styled-Compontent är ett library som tillåter dig att lägga din css i din JavaScript fil på ett enkelt sätt\n// Varför man gör detta? I mitt fall har jag \"light\" och \"dark\" mode, vad styled-compontent tillåter mig\n// är att jag kan sätta färger som variabler. Man kan använda sig av css variabler så klart,\n// Men i react projekt är styled-components mer effektivt.\n// Samt är det bra att använda styled-component om det är lite css kod som ska skrivas, det kan underlätta med\n// mindre filer då.\n"]},"metadata":{},"sourceType":"module"}