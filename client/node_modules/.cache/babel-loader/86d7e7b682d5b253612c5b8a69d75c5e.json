{"ast":null,"code":"import _slicedToArray from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./App.css\";import{useState}from\"react\";// Routing\nimport{BrowserRouter as Router,Route}from\"react-router-dom\";import AddToCartContext from\"./Contexts/AddToCartContext\";import AddToWishlistContext from\"./Contexts/AddToWishlistContext\";import LoginStatusContext from\"./Contexts/LoginStatusContext\";// Moduler för \"dark\" och \"light\" theme. Mer i ./themes.js\nimport{ThemeProvider}from\"styled-components\";import{ThemeToggler}from\"./ThemeToggler\";import{lightTheme,darkTheme,GlobalStyles}from\"./themes\";import Home from\"./components/Home/Home\";import Account from\"./components/Account/Account\";import CategoryList from\"./components/CategoryList/CategoryList\";import ShoppingCart from\"./components/ShoppingCart/ShoppingCart\";import Wishlist from\"./components/Wishlist/Wishlist\";import Product from\"./components/Product/Product\";import FetchAPI from\"./components/Product/ProductFetch/FetchAPI\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// \"Lifting state up\" ifrån ./ThemeToggler\nvar _ThemeToggler=ThemeToggler(),_ThemeToggler2=_slicedToArray(_ThemeToggler,2),theme=_ThemeToggler2[0],toggleTheme=_ThemeToggler2[1];// Ifall \"theme\" är \"light\" blir \"themeMode\" till \"dark\", och tvärtom ifall \"theme\" är \"dark\".\nvar themeMode=theme===\"light\"?lightTheme:darkTheme;// Sätter de theme som är aktiverat i LocalStorage så att det går att få tag i det över hela hemsidan.\nlocalStorage.setItem(\"CurrentTheme\",theme);// theme={theme} | toggleTheme={toggleTheme} => Behöver skickas till alla ./BottomNavigation.js\n// För att göra knappen möjlig att klicka och ändra theme.\n// Skapar en state för Cart items (context).\nvar _useState=useState([]),_useState2=_slicedToArray(_useState,2),cartItems=_useState2[0],setCartItems=_useState2[1];// Skapar en state för Wishlist items (context).\nvar _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),wishlistItems=_useState4[0],setWishlistItems=_useState4[1];// Skapar en state för Login Status (context)\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),loginStatus=_useState6[0],setLoginStatus=_useState6[1];return/*#__PURE__*/_jsx(AddToCartContext.Provider,{value:{cartItems:cartItems,setCartItems:setCartItems},children:/*#__PURE__*/_jsx(AddToWishlistContext.Provider,{value:{wishlistItems:wishlistItems,setWishlistItems:setWishlistItems},children:/*#__PURE__*/_jsx(LoginStatusContext.Provider,{value:{loginStatus:loginStatus,setLoginStatus:setLoginStatus},children:/*#__PURE__*/_jsxs(ThemeProvider,{theme:themeMode,children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",children:/*#__PURE__*/_jsx(Home,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/account\",children:/*#__PURE__*/_jsx(Account,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/category/:type/:id\",children:/*#__PURE__*/_jsx(CategoryList,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/cart\",children:/*#__PURE__*/_jsx(ShoppingCart,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/wishlist\",children:/*#__PURE__*/_jsx(Wishlist,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/product\",children:/*#__PURE__*/_jsx(Product,{theme:theme,toggleTheme:toggleTheme})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/category/:type/:id/:productid\",children:/*#__PURE__*/_jsx(FetchAPI,{})})]})]})})})});}export default App;// Info:\n// Styled-Compontent är ett library som tillåter dig att lägga din css i din JavaScript fil på ett enkelt sätt\n// Varför man gör detta? I mitt fall har jag \"light\" och \"dark\" mode, vad styled-compontent tillåter mig\n// är att jag kan sätta färger som variabler. Man kan använda sig av css variabler så klart,\n// Men i react projekt är styled-components mer effektivt.\n// Samt är det bra att använda styled-component om det är lite css kod som ska skrivas, det kan underlätta med\n// mindre filer då.","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/App.js"],"names":["useState","BrowserRouter","Router","Route","AddToCartContext","AddToWishlistContext","LoginStatusContext","ThemeProvider","ThemeToggler","lightTheme","darkTheme","GlobalStyles","Home","Account","CategoryList","ShoppingCart","Wishlist","Product","FetchAPI","App","theme","toggleTheme","themeMode","localStorage","setItem","cartItems","setCartItems","wishlistItems","setWishlistItems","loginStatus","setLoginStatus"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\n// Routing\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport AddToCartContext from \"./Contexts/AddToCartContext\";\n\nimport AddToWishlistContext from \"./Contexts/AddToWishlistContext\";\n\nimport LoginStatusContext from \"./Contexts/LoginStatusContext\";\n\n// Moduler för \"dark\" och \"light\" theme. Mer i ./themes.js\nimport { ThemeProvider } from \"styled-components\";\nimport { ThemeToggler } from \"./ThemeToggler\";\nimport { lightTheme, darkTheme, GlobalStyles } from \"./themes\";\n\nimport Home from \"./components/Home/Home\";\n\nimport Account from \"./components/Account/Account\";\n\nimport CategoryList from \"./components/CategoryList/CategoryList\";\n\nimport ShoppingCart from \"./components/ShoppingCart/ShoppingCart\";\nimport Wishlist from \"./components/Wishlist/Wishlist\";\nimport Product from \"./components/Product/Product\";\n\nimport FetchAPI from \"./components/Product/ProductFetch/FetchAPI\";\n\nfunction App() {\n  // \"Lifting state up\" ifrån ./ThemeToggler\n  const [theme, toggleTheme] = ThemeToggler();\n\n  // Ifall \"theme\" är \"light\" blir \"themeMode\" till \"dark\", och tvärtom ifall \"theme\" är \"dark\".\n  const themeMode = theme === \"light\" ? lightTheme : darkTheme;\n  // Sätter de theme som är aktiverat i LocalStorage så att det går att få tag i det över hela hemsidan.\n  localStorage.setItem(\"CurrentTheme\", theme);\n\n  // theme={theme} | toggleTheme={toggleTheme} => Behöver skickas till alla ./BottomNavigation.js\n  // För att göra knappen möjlig att klicka och ändra theme.\n\n  // Skapar en state för Cart items (context).\n  const [cartItems, setCartItems] = useState([]);\n\n  // Skapar en state för Wishlist items (context).\n  const [wishlistItems, setWishlistItems] = useState([]);\n\n  // Skapar en state för Login Status (context)\n  const [loginStatus, setLoginStatus] = useState(\"\");\n\n  return (\n    <AddToCartContext.Provider value={{ cartItems, setCartItems }}>\n      <AddToWishlistContext.Provider\n        value={{ wishlistItems, setWishlistItems }}\n      >\n        <LoginStatusContext.Provider value={{ loginStatus, setLoginStatus }}>\n          <ThemeProvider theme={themeMode}>\n            {/* GlobalStyles skapas i ./themes.js */}\n            <GlobalStyles />\n            <Router>\n              <Route exact path=\"/\">\n                <Home theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/account\">\n                <Account theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/category/:type/:id\">\n                <CategoryList theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/cart\">\n                <ShoppingCart theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/wishlist\">\n                <Wishlist theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/product\">\n                <Product theme={theme} toggleTheme={toggleTheme} />\n              </Route>\n              <Route exact path=\"/category/:type/:id/:productid\">\n                <FetchAPI />\n              </Route>\n            </Router>\n          </ThemeProvider>\n        </LoginStatusContext.Provider>\n      </AddToWishlistContext.Provider>\n    </AddToCartContext.Provider>\n  );\n}\n\nexport default App;\n\n// Info:\n// Styled-Compontent är ett library som tillåter dig att lägga din css i din JavaScript fil på ett enkelt sätt\n// Varför man gör detta? I mitt fall har jag \"light\" och \"dark\" mode, vad styled-compontent tillåter mig\n// är att jag kan sätta färger som variabler. Man kan använda sig av css variabler så klart,\n// Men i react projekt är styled-components mer effektivt.\n// Samt är det bra att använda styled-component om det är lite css kod som ska skrivas, det kan underlätta med\n// mindre filer då.\n"]},"metadata":{},"sourceType":"module"}