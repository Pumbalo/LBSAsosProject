{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/AsosProject/client/src/components/SimilarProducts/FetchAPI.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FetchAPI = props => {\n  _s();\n\n  const [product, setProducts] = useState([]);\n  let params = useParams();\n  let history = useHistory();\n  useEffect(() => {\n    let min = 0;\n    let max = Math.floor(100 / 10);\n    let randomOffset = Math.floor(min + Math.random() * (max + 1 - min));\n    const options = {\n      method: \"GET\",\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\n      params: {\n        store: \"US\",\n        offset: randomOffset,\n        categoryId: params.id,\n        limit: 5,\n        country: \"US\",\n        sort: \"freshness\",\n        currency: \"USD\",\n        sizeSchema: \"US\",\n        lang: \"en-US\"\n      },\n      headers: {\n        \"x-rapidapi-key\": \"202b38878fmsh50dbc4c475e6d98p1c84bbjsnb086cc254106\",\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\"\n      }\n    };\n    axios.request(options).then(function (response) {\n      setProducts(response.data.products);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, [params.productid]);\n\n  const productClickHandler = event => {\n    // Tar parameters från url.\n    let categoryType = params.type;\n    let categoryId = params.id; // Tar \"productId\" från produkten man klickar på.\n\n    let productId = event.currentTarget.getAttribute(\"datakey\"); // Skickar dig till detaljerad produkt sidan.\n\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\n    window.location.reload();\n    window.scrollTo(0, 0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: product.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      dataKey: product.id,\n      img: product.imageUrl,\n      name: product.name,\n      price: product.price.current.text,\n      onClick: productClickHandler\n    }, product.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FetchAPI, \"rKg1LYmGQ65vJFFu65b1vMo0JJ0=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = FetchAPI;\nexport default FetchAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"FetchAPI\");","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/SimilarProducts/FetchAPI.js"],"names":["axios","Fragment","useEffect","useState","ProductCard","useParams","useHistory","FetchAPI","props","product","setProducts","params","history","min","max","Math","floor","randomOffset","random","options","method","url","store","offset","categoryId","id","limit","country","sort","currency","sizeSchema","lang","headers","request","then","response","data","products","catch","error","console","log","productid","productClickHandler","event","categoryType","type","productId","currentTarget","getAttribute","push","window","location","reload","scrollTo","map","imageUrl","name","price","current","text"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nconst FetchAPI = (props) => {\r\n  const [product, setProducts] = useState([]);\r\n\r\n  let params = useParams();\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    let min = 0;\r\n    let max = Math.floor(100 / 10);\r\n    let randomOffset = Math.floor(min + Math.random() * (max + 1 - min));\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\r\n      params: {\r\n        store: \"US\",\r\n        offset: randomOffset,\r\n        categoryId: params.id,\r\n        limit: 5,\r\n        country: \"US\",\r\n        sort: \"freshness\",\r\n        currency: \"USD\",\r\n        sizeSchema: \"US\",\r\n        lang: \"en-US\",\r\n      },\r\n      headers: {\r\n        \"x-rapidapi-key\": \"202b38878fmsh50dbc4c475e6d98p1c84bbjsnb086cc254106\",\r\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        setProducts(response.data.products);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }, [params.productid]);\r\n\r\n  const productClickHandler = (event) => {\r\n    // Tar parameters från url.\r\n    let categoryType = params.type;\r\n    let categoryId = params.id;\r\n    // Tar \"productId\" från produkten man klickar på.\r\n    let productId = event.currentTarget.getAttribute(\"datakey\");\r\n    // Skickar dig till detaljerad produkt sidan.\r\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\r\n    window.location.reload();\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {product.map((product) => (\r\n        <ProductCard\r\n          key={product.id}\r\n          dataKey={product.id}\r\n          img={product.imageUrl}\r\n          name={product.name}\r\n          price={product.price.current.text}\r\n          onClick={productClickHandler}\r\n        />\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default FetchAPI;\r\n"]},"metadata":{},"sourceType":"module"}