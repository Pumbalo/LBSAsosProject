{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/AsosProject/client/src/components/Account/Form.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./Form.module.css\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport ButtonBig from \"../UI/Buttons/Button\";\nimport InputField from \"../UI/InputFields/InputField\";\nimport { useState } from \"react\"; // Importerar axios\n\nimport Axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PswdDropdown = styled.div`\n  color: ${props => props.theme.fontColor};\n  background-color: ${props => props.theme.secondaryBody};\n  z-index: 99 !important;\n`;\n_c = PswdDropdown;\n\nconst Form = props => {\n  _s();\n\n  const registerSubmitHandler = event => {\n    event.preventDefault();\n\n    if (!isCharLength) {\n      // Ifall lösenordet är för kort när man registrerar.\n      setIsInvalid(true);\n      setErrorMessage(\"Password is to short.\");\n    } else if (!isOneNum) {\n      // Ifall lösenordet inte har en siffra i sig när man registrerar.\n      setIsInvalid(true);\n      setErrorMessage(\"Password needs one number.\");\n    } else if (!isOneUpper) {\n      // Ifall lösenordet inte har en stor bokstav när man registrerar.\n      setIsInvalid(true);\n      setErrorMessage(\"Password needs one uppercase.\");\n    } else if (!isMatching) {\n      // Ifall lösenordet inte är lika när man registrerar.\n      setIsInvalid(true);\n      setErrorMessage(\"Password does not match.\");\n    } else {\n      setIsInvalid(false); // Skickar lösenordet till /register på port 3001 (där min server är)\n\n      Axios.post(\"http://localhost:3001/register\", {\n        firstName: firstNameReg,\n        lastName: lastNameReg,\n        username: usernameReg,\n        phone: phoneReg,\n        password: passwordReg,\n        email: emailReg\n      }).then(response => {//\n      });\n    }\n  }; // States för inloggnings info\n\n\n  const [firstNameReg, setFirstNameReg] = useState(\"\");\n  const [lastNameReg, setLastNameReg] = useState(\"\");\n  const [usernameReg, setUsernameReg] = useState(\"\");\n  const [phoneReg, setPhoneReg] = useState(\"\");\n  const [passwordReg, setPasswordReg] = useState(\"\");\n  const [secondPasswordReg, setSecondPasswordReg] = useState(\"\");\n  const [emailReg, setEmailReg] = useState(\"\"); // Password Check\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isInvalid, setIsInvalid] = useState(false);\n  const [isCharLength, setIsCharLength] = useState(false);\n  const [isOneNum, setIsOneNum] = useState(false);\n  const [isOneUpper, setIsOneUpper] = useState(false);\n  const [isMatching, setIsMatching] = useState(false); // State för dropdown att visas\n\n  const [passwordDropdown, setPasswordDropdown] = useState(false);\n\n  const showDropdownHandler = () => setPasswordDropdown(true);\n\n  const hideDropdownHandler = () => setPasswordDropdown(false);\n\n  const passwordCheckHandler = e => {\n    let val = e.target.value;\n    setPasswordReg(val); // Ifall lösenordet är kortare än 7 bokstäver\n\n    if (val.length < 7) {\n      setIsCharLength(false);\n    } // Ifall lösenordet är längre eller lika med 7 bokstäver\n\n\n    if (val.length >= 7) {\n      setIsCharLength(true);\n    } // Ifall lösenordet har en siffra i sig\n\n\n    setIsOneNum(/\\d/.test(val)); // Ifall lösenordet har en stor bokstav\n\n    setIsOneUpper(/[A-Z]/.test(val));\n\n    if (val.length !== 0) {\n      // Ifall Password och SecondPassword är lika\n      if (val === secondPasswordReg) {\n        setIsMatching(true);\n      }\n    } else {\n      setIsMatching(false);\n    }\n  };\n\n  const secondPasswordCheckHandler = e => {\n    let val = e.target.value;\n    setSecondPasswordReg(val);\n\n    if (val.length !== 0) {\n      // Ifall Password och SecondPassword är lika\n      if (val === passwordReg) {\n        setIsMatching(true);\n      }\n    } else {\n      setIsMatching(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: registerSubmitHandler,\n    className: classes.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.firstname,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"text\",\n        name: \"FirstName\",\n        placeholder: \"First Name\",\n        onChange: e => setFirstNameReg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.lastname,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"text\",\n        name: \"LastName\",\n        placeholder: \"Last Name\",\n        onChange: e => setLastNameReg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.username,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"text\",\n        name: \"Username\",\n        placeholder: \"Username\",\n        onChange: e => setUsernameReg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.phone,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"tel\",\n        name: \"Phone\",\n        placeholder: \"Phone\",\n        onChange: e => setPhoneReg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.password,\n      children: [/*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"password\",\n        name: \"Password\",\n        placeholder: \"Password\",\n        onChange: passwordCheckHandler,\n        onFocus: showDropdownHandler,\n        onBlur: hideDropdownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), isInvalid ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.psw_error,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(PswdDropdown, {\n        className: `${classes.pswd_dropdown} ${passwordDropdown ? classes.pswd_dropdown_show : null}`,\n        children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Password Requirements: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: isCharLength ? classes.valid : null,\n            children: \"At least 7 characters long\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: isOneNum ? classes.valid : null,\n            children: \"At least one number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: isOneUpper ? classes.valid : null,\n            children: \"At least one uppercase letter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: isMatching ? classes.valid : null,\n            children: \"Password must match\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.password_two,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"password\",\n        name: \"PasswordTwo\",\n        placeholder: \"Password\",\n        onChange: secondPasswordCheckHandler,\n        onFocus: showDropdownHandler,\n        onBlur: hideDropdownHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.email,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: classes.input_field,\n        type: \"email\",\n        name: \"Email\",\n        placeholder: \"E-Mail\",\n        onChange: e => setEmailReg(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.checkboxes,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.checkbox_container,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          children: [\"I accept the\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: classes.colored,\n            children: \"terms and conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), \"*\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.checkmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          children: [\"I want to sign up to ASOS's newsletter \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 52\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.checkmark\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button_container,\n      children: /*#__PURE__*/_jsxDEV(ButtonBig, {\n        type: \"submit\",\n        children: \"register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"ZzpIpTqtbU53gOAmXT1ETUldmDo=\");\n\n_c2 = Form;\nexport default Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PswdDropdown\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/Account/Form.js"],"names":["classes","Link","styled","ButtonBig","InputField","useState","Axios","PswdDropdown","div","props","theme","fontColor","secondaryBody","Form","registerSubmitHandler","event","preventDefault","isCharLength","setIsInvalid","setErrorMessage","isOneNum","isOneUpper","isMatching","post","firstName","firstNameReg","lastName","lastNameReg","username","usernameReg","phone","phoneReg","password","passwordReg","email","emailReg","then","response","setFirstNameReg","setLastNameReg","setUsernameReg","setPhoneReg","setPasswordReg","secondPasswordReg","setSecondPasswordReg","setEmailReg","errorMessage","isInvalid","setIsCharLength","setIsOneNum","setIsOneUpper","setIsMatching","passwordDropdown","setPasswordDropdown","showDropdownHandler","hideDropdownHandler","passwordCheckHandler","e","val","target","value","length","test","secondPasswordCheckHandler","input_container","firstname","input_field","lastname","psw_error","pswd_dropdown","pswd_dropdown_show","valid","password_two","checkboxes","checkbox_container","label","colored","checkmark","button_container"],"mappings":"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","sourcesContent":["import classes from \"./Form.module.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport ButtonBig from \"../UI/Buttons/Button\";\r\nimport InputField from \"../UI/InputFields/InputField\";\r\nimport { useState } from \"react\";\r\n\r\n// Importerar axios\r\nimport Axios from \"axios\";\r\n\r\nconst PswdDropdown = styled.div`\r\n  color: ${(props) => props.theme.fontColor};\r\n  background-color: ${(props) => props.theme.secondaryBody};\r\n  z-index: 99 !important;\r\n`;\r\n\r\nconst Form = (props) => {\r\n  const registerSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!isCharLength) {\r\n      // Ifall lösenordet är för kort när man registrerar.\r\n      setIsInvalid(true);\r\n      setErrorMessage(\"Password is to short.\");\r\n    } else if (!isOneNum) {\r\n      // Ifall lösenordet inte har en siffra i sig när man registrerar.\r\n      setIsInvalid(true);\r\n      setErrorMessage(\"Password needs one number.\");\r\n    } else if (!isOneUpper) {\r\n      // Ifall lösenordet inte har en stor bokstav när man registrerar.\r\n      setIsInvalid(true);\r\n      setErrorMessage(\"Password needs one uppercase.\");\r\n    } else if (!isMatching) {\r\n      // Ifall lösenordet inte är lika när man registrerar.\r\n      setIsInvalid(true);\r\n      setErrorMessage(\"Password does not match.\");\r\n    } else {\r\n      setIsInvalid(false);\r\n\r\n      // Skickar lösenordet till /register på port 3001 (där min server är)\r\n      Axios.post(\"http://localhost:3001/register\", {\r\n        firstName: firstNameReg,\r\n        lastName: lastNameReg,\r\n        username: usernameReg,\r\n        phone: phoneReg,\r\n        password: passwordReg,\r\n        email: emailReg,\r\n      }).then((response) => {\r\n        //\r\n      });\r\n    }\r\n  };\r\n\r\n  // States för inloggnings info\r\n  const [firstNameReg, setFirstNameReg] = useState(\"\");\r\n  const [lastNameReg, setLastNameReg] = useState(\"\");\r\n  const [usernameReg, setUsernameReg] = useState(\"\");\r\n  const [phoneReg, setPhoneReg] = useState(\"\");\r\n  const [passwordReg, setPasswordReg] = useState(\"\");\r\n  const [secondPasswordReg, setSecondPasswordReg] = useState(\"\");\r\n  const [emailReg, setEmailReg] = useState(\"\");\r\n\r\n  // Password Check\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isInvalid, setIsInvalid] = useState(false);\r\n  const [isCharLength, setIsCharLength] = useState(false);\r\n  const [isOneNum, setIsOneNum] = useState(false);\r\n  const [isOneUpper, setIsOneUpper] = useState(false);\r\n  const [isMatching, setIsMatching] = useState(false);\r\n\r\n  // State för dropdown att visas\r\n  const [passwordDropdown, setPasswordDropdown] = useState(false);\r\n\r\n  const showDropdownHandler = () => setPasswordDropdown(true);\r\n  const hideDropdownHandler = () => setPasswordDropdown(false);\r\n\r\n  const passwordCheckHandler = (e) => {\r\n    let val = e.target.value;\r\n    setPasswordReg(val);\r\n\r\n    // Ifall lösenordet är kortare än 7 bokstäver\r\n    if (val.length < 7) {\r\n      setIsCharLength(false);\r\n    }\r\n\r\n    // Ifall lösenordet är längre eller lika med 7 bokstäver\r\n    if (val.length >= 7) {\r\n      setIsCharLength(true);\r\n    }\r\n\r\n    // Ifall lösenordet har en siffra i sig\r\n    setIsOneNum(/\\d/.test(val));\r\n\r\n    // Ifall lösenordet har en stor bokstav\r\n    setIsOneUpper(/[A-Z]/.test(val));\r\n\r\n    if (val.length !== 0) {\r\n      // Ifall Password och SecondPassword är lika\r\n      if (val === secondPasswordReg) {\r\n        setIsMatching(true);\r\n      }\r\n    } else {\r\n      setIsMatching(false);\r\n    }\r\n  };\r\n  const secondPasswordCheckHandler = (e) => {\r\n    let val = e.target.value;\r\n    setSecondPasswordReg(val);\r\n    if (val.length !== 0) {\r\n      // Ifall Password och SecondPassword är lika\r\n      if (val === passwordReg) {\r\n        setIsMatching(true);\r\n      }\r\n    } else {\r\n      setIsMatching(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={registerSubmitHandler} className={classes.input_container}>\r\n      <div className={classes.firstname}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"text\"\r\n          name=\"FirstName\"\r\n          placeholder=\"First Name\"\r\n          onChange={(e) => setFirstNameReg(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={classes.lastname}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"text\"\r\n          name=\"LastName\"\r\n          placeholder=\"Last Name\"\r\n          onChange={(e) => setLastNameReg(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={classes.username}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"text\"\r\n          name=\"Username\"\r\n          placeholder=\"Username\"\r\n          onChange={(e) => setUsernameReg(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={classes.phone}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"tel\"\r\n          name=\"Phone\"\r\n          placeholder=\"Phone\"\r\n          onChange={(e) => setPhoneReg(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={classes.password}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"password\"\r\n          name=\"Password\"\r\n          placeholder=\"Password\"\r\n          onChange={passwordCheckHandler}\r\n          onFocus={showDropdownHandler}\r\n          onBlur={hideDropdownHandler}\r\n        />\r\n        {isInvalid ? (\r\n          <div className={classes.psw_error}>\r\n            <span>{errorMessage}</span>\r\n          </div>\r\n        ) : null}\r\n        <PswdDropdown\r\n          className={`${classes.pswd_dropdown} ${\r\n            passwordDropdown ? classes.pswd_dropdown_show : null\r\n          }`}\r\n        >\r\n          <h6>Password Requirements: </h6>\r\n          <ul>\r\n            <li className={isCharLength ? classes.valid : null}>\r\n              At least 7 characters long\r\n            </li>\r\n            <li className={isOneNum ? classes.valid : null}>\r\n              At least one number\r\n            </li>\r\n            <li className={isOneUpper ? classes.valid : null}>\r\n              At least one uppercase letter\r\n            </li>\r\n            <li className={isMatching ? classes.valid : null}>\r\n              Password must match\r\n            </li>\r\n          </ul>\r\n        </PswdDropdown>\r\n      </div>\r\n      <div className={classes.password_two}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"password\"\r\n          name=\"PasswordTwo\"\r\n          placeholder=\"Password\"\r\n          onChange={secondPasswordCheckHandler}\r\n          onFocus={showDropdownHandler}\r\n          onBlur={hideDropdownHandler}\r\n        />\r\n      </div>\r\n      <div className={classes.email}>\r\n        <InputField\r\n          className={classes.input_field}\r\n          type=\"email\"\r\n          name=\"Email\"\r\n          placeholder=\"E-Mail\"\r\n          onChange={(e) => setEmailReg(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={classes.checkboxes}>\r\n        <div className={classes.checkbox_container}>\r\n          <label className={classes.label}>\r\n            I accept the{\" \"}\r\n            <Link to=\"/\" className={classes.colored}>\r\n              terms and conditions\r\n            </Link>\r\n            *\r\n            <input type=\"checkbox\" />\r\n            <span className={classes.checkmark}></span>\r\n          </label>\r\n          <label className={classes.label}>\r\n            I want to sign up to ASOS's newsletter <input type=\"checkbox\" />\r\n            <span className={classes.checkmark}></span>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div className={classes.button_container}>\r\n        <ButtonBig type=\"submit\">register</ButtonBig>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}