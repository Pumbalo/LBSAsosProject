{"ast":null,"code":"import _slicedToArray from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import classes from\"./LoginForm.module.css\";import{useState,useContext}from\"react\";// Importerar Axios.\nimport Axios from\"axios\";import ButtonBig from\"../UI/Buttons/Button\";import InputField from\"../UI/InputFields/InputField\";// Login/Email Status Context\nimport LoginStatusContext from\"../../Contexts/LoginStatusContext\";// Importerar useHistory\nimport{useHistory}from\"react-router\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LoginForm=function LoginForm(props){// Skapar states för input\nvar _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],setPassword=_useState4[1];// Skapar en state som visar error messages.\nvar _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),errorMessage=_useState6[0],setErrorMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isError=_useState8[0],setIsError=_useState8[1];// Importerar Login Status Context\nvar _useContext=useContext(LoginStatusContext),setLoginStatus=_useContext.setLoginStatus;Axios.defaults.withCredentials=true;var history=useHistory();var loginSubmitHandler=function loginSubmitHandler(event){event.preventDefault();// Postar email & lösenord till /login på port 3001\n// Detta tas sedan upp från server sidan.\nAxios.post(\"http://localhost:3001/login\",{email:email,password:password}).then(function(response){if(response.data.message){// Ifall det finns något error (tex fel lösenord) skrivs det i en state variable\n// Samt sätter error på \"true\"\nsetErrorMessage(response.data.message);setIsError(true);}});setTimeout(function(){// Kollar ifall /login på port 3001 är true, är den true har man skrivit in rätt\n// inloggnings detaljer\nAxios.get(\"http://localhost:3001/login\").then(function(response){if(response.data.loggedIn===true){setLoginStatus(response.data.user[0].firstName);history.push(\"/\");}});},1000);// Väntar en sekund eftersom ibland kan servern ta längre tid att ladda än själva sidan.\n};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:loginSubmitHandler,className:classes.input_container,children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.email,children:[isError?/*#__PURE__*/_jsx(\"div\",{className:classes.tooltip,children:/*#__PURE__*/_jsx(\"p\",{children:errorMessage})}):null,/*#__PURE__*/_jsx(InputField,{className:\"\".concat(classes.input_field,\" \").concat(isError?classes.input_error:null),type:\"email\",name:\"email\",placeholder:\"E-Mail\",onChange:function onChange(e){setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(\"div\",{className:classes.password,children:/*#__PURE__*/_jsx(InputField,{className:\"\".concat(classes.input_field,\" \").concat(isError?classes.input_error:null),type:\"Password\",name:\"Password\",placeholder:\"Password\",onChange:function onChange(e){setPassword(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:classes.button_container,children:/*#__PURE__*/_jsx(ButtonBig,{type:\"submit\",children:\"login\"})})]});};export default LoginForm;","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/Account/LoginForm.js"],"names":["classes","useState","useContext","Axios","ButtonBig","InputField","LoginStatusContext","useHistory","LoginForm","props","email","setEmail","password","setPassword","errorMessage","setErrorMessage","isError","setIsError","setLoginStatus","defaults","withCredentials","history","loginSubmitHandler","event","preventDefault","post","then","response","data","message","setTimeout","get","loggedIn","user","firstName","push","input_container","tooltip","input_field","input_error","e","target","value","button_container"],"mappings":"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","sourcesContent":["import classes from \"./LoginForm.module.css\";\r\nimport { useState, useContext } from \"react\";\r\n\r\n// Importerar Axios.\r\nimport Axios from \"axios\";\r\n\r\nimport ButtonBig from \"../UI/Buttons/Button\";\r\nimport InputField from \"../UI/InputFields/InputField\";\r\n\r\n// Login/Email Status Context\r\nimport LoginStatusContext from \"../../Contexts/LoginStatusContext\";\r\n\r\n// Importerar useHistory\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst LoginForm = (props) => {\r\n  // Skapar states för input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Skapar en state som visar error messages.\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // Importerar Login Status Context\r\n  const { setLoginStatus } = useContext(LoginStatusContext);\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let history = useHistory();\r\n\r\n  const loginSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    // Postar email & lösenord till /login på port 3001\r\n    // Detta tas sedan upp från server sidan.\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      email: email,\r\n      password: password,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        // Ifall det finns något error (tex fel lösenord) skrivs det i en state variable\r\n        // Samt sätter error på \"true\"\r\n        setErrorMessage(response.data.message);\r\n        setIsError(true);\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      // Kollar ifall /login på port 3001 är true, är den true har man skrivit in rätt\r\n      // inloggnings detaljer\r\n      Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n        if (response.data.loggedIn === true) {\r\n          setLoginStatus(response.data.user[0].firstName);\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    }, 1000);\r\n    // Väntar en sekund eftersom ibland kan servern ta längre tid att ladda än själva sidan.\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={loginSubmitHandler} className={classes.input_container}>\r\n      <div className={classes.email}>\r\n        {isError ? (\r\n          <div className={classes.tooltip}>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        ) : null}\r\n        <InputField\r\n          className={`${classes.input_field} ${\r\n            isError ? classes.input_error : null\r\n          }`}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-Mail\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.password}>\r\n        <InputField\r\n          className={`${classes.input_field} ${\r\n            isError ? classes.input_error : null\r\n          }`}\r\n          type=\"Password\"\r\n          name=\"Password\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.button_container}>\r\n        <ButtonBig type=\"submit\">login</ButtonBig>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}