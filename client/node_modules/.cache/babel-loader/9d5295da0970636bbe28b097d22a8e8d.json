{"ast":null,"code":"var _jsxFileName = \"/Users/simon/Desktop/AsosProject/client/src/components/Account/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./LoginForm.module.css\";\nimport { useState, useContext } from \"react\"; // Importerar Axios.\n\nimport Axios from \"axios\";\nimport ButtonBig from \"../UI/Buttons/Button\";\nimport InputField from \"../UI/InputFields/InputField\"; // Login/Email Status Context\n\nimport LoginStatusContext from \"../../Contexts/LoginStatusContext\"; // Importerar useHistory\n\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  // Skapar states för input\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\"); // Skapar en state som visar error messages.\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [isError, setIsError] = useState(false); // Importerar Login Status Context\n\n  const {\n    setLoginStatus\n  } = useContext(LoginStatusContext);\n  Axios.defaults.withCredentials = true;\n  let history = useHistory();\n\n  const loginSubmitHandler = event => {\n    event.preventDefault(); // Postar email & lösenord till /login på port 3001\n    // Detta tas sedan upp från server sidan.\n\n    Axios.post(\"http://localhost:3001/login\", {\n      email: email,\n      password: password\n    }).then(response => {\n      if (response.data.message) {\n        // Ifall det finns något error (tex fel lösenord) skrivs det i en state variable\n        // Samt sätter error på \"true\"\n        setErrorMessage(response.data.message);\n        setIsError(true);\n      }\n    });\n    setTimeout(() => {\n      // Kollar ifall /login på port 3001 är true, är den true har man skrivit in rätt\n      // inloggnings detaljer\n      Axios.get(\"http://localhost:3001/login\").then(response => {\n        if (response.data.loggedIn === true) {\n          setLoginStatus(response.data.user[0].firstName);\n          history.push(\"/\");\n        }\n      });\n    }, 1000); // Väntar en sekund eftersom ibland kan servern ta längre tid att ladda än själva sidan.\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: loginSubmitHandler,\n    className: classes.input_container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.email,\n      children: [isError ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.tooltip,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(InputField, {\n        className: `${classes.input_field} ${isError ? classes.input_error : null}`,\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"E-Mail\",\n        onChange: e => {\n          setEmail(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.password,\n      children: /*#__PURE__*/_jsxDEV(InputField, {\n        className: `${classes.input_field} ${isError ? classes.input_error : null}`,\n        type: \"Password\",\n        name: \"Password\",\n        placeholder: \"Password\",\n        onChange: e => {\n          setPassword(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button_container,\n      children: /*#__PURE__*/_jsxDEV(ButtonBig, {\n        type: \"submit\",\n        children: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"j93ahzm+3+FV6mKEG+AsEUS3UHc=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/Account/LoginForm.js"],"names":["classes","useState","useContext","Axios","ButtonBig","InputField","LoginStatusContext","useHistory","LoginForm","props","email","setEmail","password","setPassword","errorMessage","setErrorMessage","isError","setIsError","setLoginStatus","defaults","withCredentials","history","loginSubmitHandler","event","preventDefault","post","then","response","data","message","setTimeout","get","loggedIn","user","firstName","push","input_container","tooltip","input_field","input_error","e","target","value","button_container"],"mappings":"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","sourcesContent":["import classes from \"./LoginForm.module.css\";\r\nimport { useState, useContext } from \"react\";\r\n\r\n// Importerar Axios.\r\nimport Axios from \"axios\";\r\n\r\nimport ButtonBig from \"../UI/Buttons/Button\";\r\nimport InputField from \"../UI/InputFields/InputField\";\r\n\r\n// Login/Email Status Context\r\nimport LoginStatusContext from \"../../Contexts/LoginStatusContext\";\r\n\r\n// Importerar useHistory\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst LoginForm = (props) => {\r\n  // Skapar states för input\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // Skapar en state som visar error messages.\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  // Importerar Login Status Context\r\n  const { setLoginStatus } = useContext(LoginStatusContext);\r\n\r\n  Axios.defaults.withCredentials = true;\r\n\r\n  let history = useHistory();\r\n\r\n  const loginSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    // Postar email & lösenord till /login på port 3001\r\n    // Detta tas sedan upp från server sidan.\r\n    Axios.post(\"http://localhost:3001/login\", {\r\n      email: email,\r\n      password: password,\r\n    }).then((response) => {\r\n      if (response.data.message) {\r\n        // Ifall det finns något error (tex fel lösenord) skrivs det i en state variable\r\n        // Samt sätter error på \"true\"\r\n        setErrorMessage(response.data.message);\r\n        setIsError(true);\r\n      }\r\n    });\r\n    setTimeout(() => {\r\n      // Kollar ifall /login på port 3001 är true, är den true har man skrivit in rätt\r\n      // inloggnings detaljer\r\n      Axios.get(\"http://localhost:3001/login\").then((response) => {\r\n        if (response.data.loggedIn === true) {\r\n          setLoginStatus(response.data.user[0].firstName);\r\n          history.push(\"/\");\r\n        }\r\n      });\r\n    }, 1000);\r\n    // Väntar en sekund eftersom ibland kan servern ta längre tid att ladda än själva sidan.\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={loginSubmitHandler} className={classes.input_container}>\r\n      <div className={classes.email}>\r\n        {isError ? (\r\n          <div className={classes.tooltip}>\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n        ) : null}\r\n        <InputField\r\n          className={`${classes.input_field} ${\r\n            isError ? classes.input_error : null\r\n          }`}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"E-Mail\"\r\n          onChange={(e) => {\r\n            setEmail(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.password}>\r\n        <InputField\r\n          className={`${classes.input_field} ${\r\n            isError ? classes.input_error : null\r\n          }`}\r\n          type=\"Password\"\r\n          name=\"Password\"\r\n          placeholder=\"Password\"\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className={classes.button_container}>\r\n        <ButtonBig type=\"submit\">login</ButtonBig>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}