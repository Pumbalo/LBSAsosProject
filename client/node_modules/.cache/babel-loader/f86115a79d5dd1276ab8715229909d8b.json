{"ast":null,"code":"import _defineProperty from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/simon/Desktop/AsosProject/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import axios from\"axios\";import{useState,useEffect,Fragment}from\"react\";import ProductCard from\"../UI/ProductCard/ProductCard\";import{useParams,useHistory}from\"react-router-dom\";import Loading from\"../UI/Progress/Circular\";import classes from\"./FetchAPI.module.css\";import Axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";var FetchAPI=function FetchAPI(props){Axios.defaults.withCredentials=false;// Sätter initial loading state till false\nvar _useState=useState(false),_useState2=_slicedToArray(_useState,2),isLoading=_useState2[0],setIsLoading=_useState2[1];var linkParams=useParams();var history=useHistory();var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),product=_useState4[0],setProducts=_useState4[1];var facetValue=props.facetValue;var facetKey=props.facetKey;// Sätter initial parameters\nvar _useState5=useState({store:\"US\",categoryId:props.categoryId,limit:48,country:\"US\",sort:\"freshness\",currency:\"USD\",sizeSchema:\"US\",lang:\"en-US\"}),_useState6=_slicedToArray(_useState5,2),params=_useState6[0],setParams=_useState6[1];useEffect(function(){// skapar ett nytt objekt 'requestParam' som sedan tar all data från params samt lägger\n// till offset & limit: Detta är tex produkt 0-48, eller produkt 100-142, osv.\nvar requestParam=_objectSpread(_objectSpread({},params),{},{offset:props.offset});// om FacetKey inte är undefined.\nif(facetKey){// Lägger till Key och Value från \"sorting dropdown\"\nrequestParam=_objectSpread(_defineProperty({},facetKey,facetValue),params);// Sätter param till requestParam så de sparar värdet ifall användaren sorterar på olika sätt.\nsetParams(_objectSpread({},requestParam));}// Sätter standard värden på api call.\nvar options={method:\"GET\",url:\"https://asos2.p.rapidapi.com/products/v2/list\",params:requestParam,headers:{\"x-rapidapi-key\":\"8dde4b0400mshe33118a17798972p174f30jsne26022450645\",\"x-rapidapi-host\":\"asos2.p.rapidapi.com\"}};// Axios fetchar api\naxios.request(options).then(function(response){setProducts(response.data.products);props.items(response.data.itemCount);props.facets(response.data.facets);setIsLoading(true);}).catch(function(error){console.error(error);});// Detta körs endast ifall props.limit eller facetKey har fått nytt värde.\n},[props.offset,facetKey]);var productClickHandler=function productClickHandler(event){// Tar parameters från url.\nvar categoryType=linkParams.type;var categoryId=linkParams.id;// Tar \"productId\" från produkten man klickar på.\nvar productId=event.currentTarget.getAttribute(\"datakey\");// Skickar dig till detaljerad produkt sidan.\nhistory.push(\"/category/\".concat(categoryType,\"/\").concat(categoryId,\"/\").concat(productId));};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:isLoading?/*#__PURE__*/_jsx(Fragment,{children:product.map(function(product){return/*#__PURE__*/_jsx(ProductCard,{datakey:product.id,img:product.imageUrl,name:product.name,price:product.price.current.text,onClick:productClickHandler,productId:product.id},product.id);})}):/*#__PURE__*/_jsx(Loading,{className:classes.loading,title:\"Loading Products\"})})});};export default FetchAPI;","map":{"version":3,"sources":["/Users/simon/Desktop/AsosProject/client/src/components/ProductFetch/FetchAPI.js"],"names":["axios","useState","useEffect","Fragment","ProductCard","useParams","useHistory","Loading","classes","Axios","FetchAPI","props","defaults","withCredentials","isLoading","setIsLoading","linkParams","history","product","setProducts","facetValue","facetKey","store","categoryId","limit","country","sort","currency","sizeSchema","lang","params","setParams","requestParam","offset","options","method","url","headers","request","then","response","data","products","items","itemCount","facets","catch","error","console","productClickHandler","event","categoryType","type","id","productId","currentTarget","getAttribute","push","container","map","imageUrl","name","price","current","text","loading"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport ProductCard from \"../UI/ProductCard/ProductCard\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport Loading from \"../UI/Progress/Circular\";\r\n\r\nimport classes from \"./FetchAPI.module.css\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nconst FetchAPI = (props) => {\r\n  Axios.defaults.withCredentials = false;\r\n\r\n  // Sätter initial loading state till false\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  let linkParams = useParams();\r\n  let history = useHistory();\r\n  const [product, setProducts] = useState([]);\r\n  let facetValue = props.facetValue;\r\n  let facetKey = props.facetKey;\r\n\r\n  // Sätter initial parameters\r\n  const [params, setParams] = useState({\r\n    store: \"US\",\r\n    categoryId: props.categoryId,\r\n    limit: 48,\r\n    country: \"US\",\r\n    sort: \"freshness\",\r\n    currency: \"USD\",\r\n    sizeSchema: \"US\",\r\n    lang: \"en-US\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // skapar ett nytt objekt 'requestParam' som sedan tar all data från params samt lägger\r\n    // till offset & limit: Detta är tex produkt 0-48, eller produkt 100-142, osv.\r\n    let requestParam = {\r\n      ...params,\r\n      offset: props.offset,\r\n    };\r\n    // om FacetKey inte är undefined.\r\n    if (facetKey) {\r\n      // Lägger till Key och Value från \"sorting dropdown\"\r\n      requestParam = {\r\n        [facetKey]: facetValue,\r\n        ...params,\r\n      };\r\n      // Sätter param till requestParam så de sparar värdet ifall användaren sorterar på olika sätt.\r\n      setParams({ ...requestParam });\r\n    }\r\n\r\n    // Sätter standard värden på api call.\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://asos2.p.rapidapi.com/products/v2/list\",\r\n      params: requestParam,\r\n      headers: {\r\n        \"x-rapidapi-key\": \"8dde4b0400mshe33118a17798972p174f30jsne26022450645\",\r\n        \"x-rapidapi-host\": \"asos2.p.rapidapi.com\",\r\n      },\r\n    };\r\n    // Axios fetchar api\r\n    axios\r\n      .request(options)\r\n      .then(function (response) {\r\n        setProducts(response.data.products);\r\n        props.items(response.data.itemCount);\r\n        props.facets(response.data.facets);\r\n        setIsLoading(true);\r\n      })\r\n      .catch(function (error) {\r\n        console.error(error);\r\n      });\r\n    // Detta körs endast ifall props.limit eller facetKey har fått nytt värde.\r\n  }, [props.offset, facetKey]);\r\n\r\n  const productClickHandler = (event) => {\r\n    // Tar parameters från url.\r\n    let categoryType = linkParams.type;\r\n    let categoryId = linkParams.id;\r\n    // Tar \"productId\" från produkten man klickar på.\r\n    let productId = event.currentTarget.getAttribute(\"datakey\");\r\n    // Skickar dig till detaljerad produkt sidan.\r\n    history.push(`/category/${categoryType}/${categoryId}/${productId}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.container}>\r\n        {isLoading ? (\r\n          <Fragment>\r\n            {product.map((product) => (\r\n              <ProductCard\r\n                key={product.id}\r\n                datakey={product.id}\r\n                img={product.imageUrl}\r\n                name={product.name}\r\n                price={product.price.current.text}\r\n                onClick={productClickHandler}\r\n                productId={product.id}\r\n              />\r\n            ))}\r\n          </Fragment>\r\n        ) : (\r\n          <Loading className={classes.loading} title=\"Loading Products\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchAPI;\r\n"]},"metadata":{},"sourceType":"module"}